from numpy import ones, array, empty, zeros
from numpy import linspace, logspace, cos, pi, exp, sqrt
import numpy as np
def trapezoid_new(d ,h):
    v = np.ones_like(d)
    v[0] = 1/2
    v[-1] = 1/2
    return h * sum(v * d)
x = linspace(0, pi/2, 32)
y = cos(x)
print(trapezoid_new(y, x[1] - x[0]))
for i in range(1,7):
    x = linspace(0, pi/2, 10**i)
    y = cos(x)
    error = trapezoid_new(y, x[1] - x[0]) - 1
    print("cacl = ", trapezoid_new(y, x[1] - x[0]),"error = ", error)

def simpson(d, h):
    v = 2 * np.ones_like(d)
    v[0] = 1
    v[1::2] *=2
    v[v.size - 1] = 1
    return h * sum((v/3) * d)

from scipy.integrate import quad

def f(x):
    return np.cos(x)
def h(x):
    return np.exp(-x)
print(
quad(f,0,np.pi/2)
    ,
quad(h,0,1)
    )
